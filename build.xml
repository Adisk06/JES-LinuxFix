<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE project [
       <!ENTITY releases SYSTEM "releases/build-releases.xml">
]>

<project name="jes" basedir="." default="build"
    xmlns:if="ant:if" xmlns:unless="ant:unless">
    <!-- Load a property file -->
    <condition property="build.properties.exists">
        <resourceexists>
            <file file="${basedir}/build.properties" />
        </resourceexists>
    </condition>

    <property file="${basedir}/build.properties" if:set="build.properties.exists" />

    <!-- Project metadata -->
    <property name="release"            value="-snapshot" unless:set="release" />

    <property name="jes.copyright"      value="Â© 2014 Matthew Frazier, Mark Guzdial, and others" />
    <property name="jes.version"        value="5.0" />
    <property name="jes.release"        value="${jes.version}${release}" />

    <tstamp>
        <format property="jes.release.date" pattern="MMMMM d, yyyy" />
        <format property="jes.release.year" pattern="yyyy" />
    </tstamp>

    <property name="jes.homepage"       value="https://github.com/gatech-csl/jes" />
    <property name="jes.homepage.host"  value="GitHub" />

    <filter token="version"             value="${jes.version}" />
    <filter token="release"             value="${jes.release}" />
    <filter token="releasesuffix"       value="${release}" />
    <filter token="releasedate"         value="${jes.release.date}" />
    <filter token="releaseyear"         value="${jes.release.year}" />
    <filter token="homepage"            value="${jes.homepage}" />
    <filter token="homepagehost"        value="${jes.homepage.host}" />

    <property name="jes.target-java"    value="1.5" />

    <!-- Paths to things in the repository -->
    <property name="jes.home"           location="jes" />

    <property name="jes.python.src"     location="${jes.home}/python" />
    <property name="jes.java.src"       location="${jes.home}/java" />
    <property name="jes.java.class"     location="${jes.home}/classes" />
    <property name="jes.java.jar"       location="${jes.home}/classes.jar" />
    <property name="jes.javadoc"        location="${jes.home}/javadoc" />

    <property name="jes.main"           value="JESstartup" />
    <property name="jes.configfile.name" value="JESConfig.properties" />

    <property name="jes.deps"           location="dependencies" />
    <property name="jes.deps.jardir"    location="${jes.deps}/jars" />

    <property name="python.home"        location="${jes.deps}/jython" />
    <property name="python.main"        value="org.python.util.jython" />

    <property name="jes.tests"          location="tests" />
    <property name="jes.tests.script"   location="${jes.tests}/TestExecute.py" />
    <property name="jes.tests.output"   location="${jes.tests}/test-output" />

    <property name="jes.release.dir"    location="releases" />

    <property name="jes.help"           location="${jes.home}/help" />
    <property name="jes.help.copyright" location="${jes.help}/JESCopyright.txt" />

    <property name="jes.launcher.sh"    location="jes.sh" />
    <property name="jes.launcher.bat"   location="jes.bat" />

    <property name="jes.launcher.bat.embedded-jre"  value="dependencies/jre-win32" />


    <!-- Detecting our OS -->
    <condition property="userpaths.windows">
        <os family="windows" />
    </condition>
    <condition property="userpaths.mac">
        <os family="mac" />
    </condition>
    <condition property="userpaths.linux">
        <not>
            <or>
                <os family="windows" />
                <os family="mac" />
            </or>
        </not>
    </condition>


    <!-- JES classpath -->
    <fileset id="jes.deps.jars" dir="${jes.deps.jardir}">
        <include name="*.jar" />
    </fileset>

    <path id="jes.classpath">
        <pathelement path="${jes.java.jar}" />
        <fileset refid="jes.deps.jars" />
    </path>


    <!-- JES Python path -->
    <path id="jes.pythonpath">
        <pathelement path="${jes.python.src}" />
    </path>

    <property name="python.path" value="${toString:jes.pythonpath}" />


    <!-- JES system properties -->
    <propertyset id="jes.properties">
        <propertyref name="python.home" />
        <propertyref name="python.cachedir" />
        <propertyref name="python.path" />
        <propertyref name="jes.home" />
        <propertyref name="jes.configfile" />
    </propertyset>


    <!-- Building JES -->
    <target name="build" depends="compile, javadoc"
        description="Build everything that needs to be built." />

    <target name="version" depends="scminfo">
        <copy file="${jes.java.src}/JESVersion.java.in"
                tofile="${jes.java.src}/JESVersion.java"
                filtering="on" overwrite="true" />
    </target>

    <target name="scminfo">
        <exec executable="git"
            outputproperty="jes.scminfo"
            failifexecutionfails="false"
            logError="true">
            <arg value="log" />
            <arg value="-n1" />
            <arg value="--format=Git commit %h (%cD)" />
        </exec>

        <property name="jes.scminfo" value="Unknown" unless:set="jes.scminfo" />
        <filter token="scminfo" value="${jes.scminfo}" />
    </target>

    <target name="compile" depends="version"
        description="Build the Java class files and JAR.">
        <mkdir dir="${jes.java.class}" />
        <javac srcdir="${jes.java.src}" destdir="${jes.java.class}"
               source="${jes.target-java}" target="${jes.target-java}"
               debug="on"
               includeantruntime="false">
            <classpath refid="jes.classpath" />
        </javac>
        <jar destfile="${jes.java.jar}" basedir="${jes.java.class}" />
    </target>

    <uptodate property="jes.javadoc.uptodate" targetfile="${jes.javadoc}/index-all.html">
        <srcfiles dir="${jes.java.src}" includes="**/*.java" />
    </uptodate>

    <target name="javadoc" unless="jes.javadoc.uptodate"
        description="Build the Javadocs for the Java classes.">
        <javadoc destdir="${jes.javadoc}">
            <!-- We have to use a fileset because JES doesn't use packages. -->
            <fileset dir="${jes.java.src}">
                <include name="**/*.java" />
            </fileset>

            <classpath refid="jes.classpath" />
            <arg value="-quiet" />
        </javadoc>
    </target>


    <!-- Booting JES -->
    <property environment="env" />

    <target name="system-paths">
        <property name="python.cachedir"
                  value="${env.LOCALAPPDATA}/JES/jython-cache"
                  if:set="userpaths.windows" />
        <property name="jes.configfile"
                  value="${env.AppData}/JES/${jes.configfile.name}"
                  if:set="userpaths.windows" />

        <property name="python.cachedir"
                  value="${user.home}/Library/Caches/JES/jython-cache"
                  if:set="userpaths.mac" />
        <property name="jes.configfile"
                  value="${user.home}/Library/Application Support/JES/${jes.configfile.name}"
                  if:set="userpaths.mac" />

        <property name="python.cachedir"
                  value="${user.home}/.cache/jes/jython-cache"
                  if:set="userpaths.linux" />
        <property name="jes.configfile"
                  value="${user.home}/.config/jes/${jes.configfile.name}"
                  if:set="userpaths.linux" />
    </target>

    <target name="jython-cache" depends="system-paths"
        description="Ensure that the Jython cache exists.">
        <mkdir dir="${python.cachedir}" />
    </target>


    <!-- Testing JES -->
    <target name="test" depends="compile, jython-cache"
        description="Run the JES regression test suite.">
        <java classname="${python.main}">
            <classpath refid="jes.classpath" />
            <syspropertyset refid="jes.properties" />

            <arg file="${jes.tests.script}" />
        </java>
    </target>


    <!-- Cleaning up after JES -->
    <target name="clean" depends="clean-java, clean-python, clean-pkgcache, clean-test, clean-release-stage"
        description="CLEAN ALL THE THINGS! (Except release packages.)" />

    <target name="clean-java" depends="clean-java-classes, clean-javadoc"
        description="Remove the built classes and Javadoc." />

    <target name="clean-java-classes"
        description="Remove the compiled Java classes.">
        <delete file="${jes.java.jar}" />
        <delete includeemptydirs="true">
            <fileset dir="${jes.java.class}" includes="**/*" />
        </delete>
    </target>

    <target name="clean-javadoc"
        description="Remove the built Javadocs.">
        <delete includeemptydirs="true">
            <fileset dir="${jes.javadoc}" includes="**/*" />
        </delete>
    </target>

    <target name="clean-python"
        description="Remove the cached Python bytecode.">
        <delete>
            <fileset dir="${jes.python.src}" includes="**/*$py.class" />
        </delete>
    </target>

    <target name="clean-pkgcache" depends="system-paths"
        description="Remove the Jython package cache.">
        <delete dir="${python.cache}" />
    </target>

    <target name="clean-test"
        description="Remove files generated by the test suite.">
        <delete>
            <fileset dir="${jes.tests.output}" includes="**/*" excludes="README" />
        </delete>
    </target>


    &releases;


    <!-- Debugging the build file -->
    <target name="antprops" depends="system-paths, scminfo"
        description="Print Ant properties (for working on the build script).">
        <echoproperties />
    </target>
</project>

